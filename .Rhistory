if (isats == 1) sats = satsFull else sats = satsFull[satsFull$Scopus.Group >=4,]
tdiffs = (sats$To-sats$From)/365.25
years = year(sats$From)
nyrs = 10
yint = seq(1970,2025,nyrs)
dyr = findInterval(years, yint)
ints = unique(dyr)
lyrs = aggregate(tdiffs, by = list(dyr), FUN = mean)
lyrs[,1] = rollmean(yint,2)[1:dim(lyrs)[1]]
flying = (sats$To == lastdate)
ingrp = table(dyr)
singrp = table(dyr[flying])
for (fi in 1:2) {
if (fi == 1) fingrp = ingrp else fingrp = singrp
fingrp = as.data.frame(fingrp)
if (is.factor(fingrp$Var1)) fingrp$Var1 = as.numeric(as.character(fingrp$Var1))
if (dim(fingrp)[1] < length(ints)) {
missing = ints[!(ints %in% fingrp$Var1)]
fingrp = rbind(fingrp, data.frame(Var1 = missing, Freq = 0))
fingrp = fingrp[order(fingrp$Var1),]
}
if (fi ==1) ingrp = fingrp else singrp = fingrp
}
plot(lyrs, xlab = "Year", ylab = "Average lifetime (years)", pch = 16,
cex = sqrt(ingrp$Freq), cex.lab = 2, cex.axis = 2, ylim = c(0,10),
col = "black")
#, main = paste("Aggregation years", nyrs))
#   , main = ifelse(isats == 1,"All satellites", "Satellites > 4 hits" ))
points(lyrs, pch = 16, col = "gray", cex = sqrt(fingrp$Freq))
#}
dev.off()
lifetime = lyrs
}
require(zoo)
for (isats in 1:1) {
png(paste("lifetime", isats, ".png", sep = ""), width = 1000, height = 1000)
# par(mfrow = c(3,2))
#  for (nyrs in 5:10) {
par(mar = c(5, 6, 3, 2) + 0.1)
par(mex = 1.5)
if (isats == 1) sats = satsFull else sats = satsFull[satsFull$Scopus.Group >=4,]
tdiffs = difftime(sats$To, sats$From, units = "days")/365.25
years = year(sats$From)
nyrs = 10
yint = seq(1970,2025,nyrs)
dyr = findInterval(years, yint)
ints = unique(dyr)
lyrs = aggregate(tdiffs, by = list(dyr), FUN = mean)
lyrs[,1] = rollmean(yint,2)[1:dim(lyrs)[1]]
flying = (sats$To == lastdate)
ingrp = table(dyr)
singrp = table(dyr[flying])
for (fi in 1:2) {
if (fi == 1) fingrp = ingrp else fingrp = singrp
fingrp = as.data.frame(fingrp)
if (is.factor(fingrp$Var1)) fingrp$Var1 = as.numeric(as.character(fingrp$Var1))
if (dim(fingrp)[1] < length(ints)) {
missing = ints[!(ints %in% fingrp$Var1)]
fingrp = rbind(fingrp, data.frame(Var1 = missing, Freq = 0))
fingrp = fingrp[order(fingrp$Var1),]
}
if (fi ==1) ingrp = fingrp else singrp = fingrp
}
plot(lyrs, xlab = "Year", ylab = "Average lifetime (years)", pch = 16,
cex = sqrt(ingrp$Freq), cex.lab = 2, cex.axis = 2, ylim = c(0,10),
col = "black")
#, main = paste("Aggregation years", nyrs))
#   , main = ifelse(isats == 1,"All satellites", "Satellites > 4 hits" ))
points(lyrs, pch = 16, col = "gray", cex = sqrt(fingrp$Freq))
#}
dev.off()
lifetime = lyrs
}
library(lubridate)
library(sp)
setwd("e:/text/papers/old/satellites/updated")
sats = read.csv("Imaging_satellites 7.csv")
sats = sats[,1:18]
sats = sats[!is.na(sats$Index),]
if (!"Name" %in% names(sats)) sats$Name = sats$Spacecraft
sats$ISO3 = sats$ISO.3166.country.code.A3
sats = sats[sats$Name != "",]
froms = strptime(levels(sats$From)[sats$From],"%d.%m.%Y" )
sats$From = as.POSIXct(froms)
tos = strptime(levels(sats$To)[sats$To],"%d.%m.%Y" )
sats$To = as.POSIXct(tos)
sats = sats[order(sats$From),]
if (is.factor(sats$Index)) sats$Index = as.numeric(as.character(sats$Index))
if (is.factor(sats$P1)) sats$P1 = as.numeric(as.character(sats$P1))
if (is.factor(sats$P2)) sats$P2 = as.numeric(as.character(sats$P2))
if (is.factor(sats$M1)) sats$M1 = as.numeric(as.character(sats$M1))
if (is.factor(sats$M2)) sats$M2 = as.numeric(as.character(sats$M2))
if (is.factor(sats$M3)) sats$M3 = as.numeric(as.character(sats$M3))
if (is.factor(sats$M4)) sats$M4 = as.numeric(as.character(sats$M4))
if (is.factor(sats$S1)) sats$S1 = as.numeric(as.character(sats$S1))
years = year(sats$From)
lastyear = max(years, na.rm = TRUE)
lastdate = max(sats$From)
sats$To[is.na(sats$To)] = lastdate
satsAll = sats[!is.na(sats$Index),]
satsFull = satsAll[satsAll$Index < 300,]
# Premature satellite deaths:
sats = satsFull
tdiffs = difftime(sats$To,sats$From, units = "days")/365.25
dyr =  signif(years-4,3) +5
dyrs = unique(dyr)
lmat = matrix(NA, ncol = 10, nrow = 5)
for (id in 1:length(dyrs)) {
dy = dyrs[id]
ldiffs = tdiffs[dyr == dy]
for (ilev in 3:8) {
rat = length(ldiffs[ldiffs < ilev])/length(ldiffs)
print(paste(dy, ilev, rat))
lmat[id,ilev] = rat
}
}
lmat = data.frame(lmat[, 3:8])
dimnames(lmat)[[1]] = dyrs
dimnames(lmat)[[2]] = 3:8
cols = bpy.colors(6)
png("FailureRates.png", width = 1000, height = 900)
par(mar = c(5, 6, 3, 2) + 0.1)
par(mex = 1.5)
lind = length(dyrs)
if (lastyear - dyrs[lind] < 3) lind = lind - 1
plot(dyrs[1:lind], lmat[1:lind,1], col = cols[1], type = "l", lwd = 2, ylim = c(0,1), xlab = "Year",
ylab = "Failure rate before 3 years", cex = 2, cex.lab = 2, cex.axis = 2)
#for (ilev in 2:6) lines(dyrs, lmat[,ilev], col = cols[ilev], lwd = 2)
#legend(1978, 0.25, legend = paste(3:8, "years"), col = cols, lwd = 2, lty = 1, cex = 2)
dev.off()
# Satellite lifetime dekadal average:
# Figure 3
opar = par()
require(zoo)
for (isats in 1:1) {
png(paste("lifetime", isats, ".png", sep = ""), width = 1000, height = 1000)
# par(mfrow = c(3,2))
#  for (nyrs in 5:10) {
par(mar = c(5, 6, 3, 2) + 0.1)
par(mex = 1.5)
if (isats == 1) sats = satsFull else sats = satsFull[satsFull$Scopus.Group >=4,]
tdiffs = difftime(sats$To, sats$From, units = "days")/365.25
years = year(sats$From)
nyrs = 10
yint = seq(1970,2025,nyrs)
dyr = findInterval(years, yint)
ints = unique(dyr)
lyrs = aggregate(tdiffs, by = list(dyr), FUN = mean)
lyrs[,1] = rollmean(yint,2)[1:dim(lyrs)[1]]
flying = (sats$To == lastdate)
ingrp = table(dyr)
singrp = table(dyr[flying])
for (fi in 1:2) {
if (fi == 1) fingrp = ingrp else fingrp = singrp
fingrp = as.data.frame(fingrp)
if (is.factor(fingrp$Var1)) fingrp$Var1 = as.numeric(as.character(fingrp$Var1))
if (dim(fingrp)[1] < length(ints)) {
missing = ints[!(ints %in% fingrp$Var1)]
fingrp = rbind(fingrp, data.frame(Var1 = missing, Freq = 0))
fingrp = fingrp[order(fingrp$Var1),]
}
if (fi ==1) ingrp = fingrp else singrp = fingrp
}
plot(lyrs, xlab = "Year", ylab = "Average lifetime (years)", pch = 16,
cex = sqrt(ingrp$Freq), cex.lab = 2, cex.axis = 2, ylim = c(0,10),
col = "black")
#, main = paste("Aggregation years", nyrs))
#   , main = ifelse(isats == 1,"All satellites", "Satellites > 4 hits" ))
points(lyrs, pch = 16, col = "gray", cex = sqrt(fingrp$Freq))
#}
dev.off()
lifetime = lyrs
}
# Satellite operation time
# Original figure
# Figure 1
png(paste("OperativeSatellites.png", sep = ""), width = 1000, height = 1000)
par(mar = c(5, 6, 3, 2) + 0.1)
par(mex = 1.5)
sats = satsFull
nd = dim(sats)[1]
tlims = as.POSIXct(strptime(c(1970, 2014), "%Y"))
lwdd = 2
cols = bpy.colors(length(levels(sats$Country)))
if (isats <= 2) {
cols = rep(c(gray(0.5),gray(0.1)), nd/2)[1:nd]
} else {
sgrps = c(1,5,50,500,2000,4000)
sats$sg = findInterval(sats$Scopus.Group, sgrps)
sats$sg[is.na(sats$sg)] = 0
#    cols = gray(1-log(sats$Scopus.Group)/log(max(sats$Scopus.Group)+1000))
cc = c(0.95, 0.8, 0.5, 0.25, 0)
cols = gray(cc[sats$sg])
}
tdates1 =   as.POSIXct(strptime(c("01.08.1972", "01.08.1982", "01.08.1992",
"01.08.2002", "01.08.2012"), "%d.%m.%Y"))
tdates2 =   as.POSIXct(strptime(c("02.08.1972", "02.08.1982", "02.08.1992",
"02.08.2002", "02.08.2012"), "%d.%m.%Y"))
tints = interval(tdates1,tdates2)
sints = interval(sats$From, sats$To)
tdates3 = as.POSIXct(strptime(c(paste("01.08.",1972:lastyear, sep=""), paste0("30.12.",lastyear)), "%d.%m.%Y"))
tdates4 = as.POSIXct(strptime(c(paste("02.08.",1972:lastyear, sep=""), paste0("31.12.", lastyear)), "%d.%m.%Y"))
tints2 = interval(tdates3,tdates4)
i = 1
plot(y = c(sats$From[i], sats$To[i]),x = rep(i, 2),xlim = c(0,nd+10), ylim = tlims,
type = "l", lwd = 4, col = cols[i], #xaxt = "n",
cex.axis = 2,
xlab = "Launches in chronological order", ylab = "Satellite mission lifetime (years)", cex.lab = 2 )
for (i in 2:nd) lines(y = sats[i,c("From", "To")], x = rep(i, 2), lwd = 4, col = cols[i])
for (idat in 1:5) {
lines(c(0,nd), c(tdates1[idat],tdates1[idat]))
text(nd+3, tdates1[idat], sum(int_overlaps(tints[[idat]], sints)), cex = 2)
#  text(0.9, tdates1[idat], idat,  offset = -4)
}
dev.off()
fsat = data.frame(date = tdates3, fsats = NA)
for (idat in 1:length(tints2)) {
fsat$fsats[idat] = sum(int_overlaps(tints2[[idat]], sints))
}
png(paste("OperativeSatelliesYear.png", sep = ""), height = 1000, width = 1000)
par(mar = c(5, 6, 3, 2) + 0.1)
par(mex = 1.5)
plot(fsats~date, fsat[1:(dim(fsat)[1]-1),], t = "l", ylab = "Operative missions", xlab = "Year",
cex = 2, cex.lab = 2, cex.axis = 2)
dev.off()
opSats = fsat[dim(fsat)[1],]
# Scopus table
#Table 1
sgrps = c(0,1,5,50,500,5000)
#sgrps = c(1,5,50,500,2000,4000)
nns = length(sgrps) - 1
lsats = satsFull[!duplicated(satsFull$Program),]
ll = lsats[,c("Program", "Scopus.Group")]
#ll = ll[ll$Scopus.Group > 0,]
ll$sgrp = findInterval(ll$Scopus.Group, sgrps)
ll = ll[order(ll$Scopus.Group),]
stable = as.data.frame(matrix(NA, ncol = nns, nrow = 20))
for (igrp in 1:nns){
lloc = ll[ll$sgrp == igrp,]
ln = dim(lloc)[1]
stable[1:ln,igrp] = lloc$Program
}
png("ScopusHits.png", width = 2000, height = 1200)
par(xpd=T, mar= c(5, 6, 3, 2) + 0.1)
#cmat = matrix(ncol = length((lconts)), nrow = length(yrs))
plot.new()
nh = 30
plot.window(xlim = c(1,length(sgrps)), ylim = c(1,nh))
#axis(2, cex.axis = 2)
#axis(1, cex.axis = 2)
#title(ylab = "Program", xlab = " ", cex.lab = 2)
for (i in 1:(length(sgrps)-1)) {
text(i+.5,nh-0.5,paste("Group", i), cex = 2)
lines(rep(i,2), c(1,nh))
if (i == 1 & sgrps[1] ==0) {
text(i+.5,nh-1.5,0, cex = 2)
} else {
text(i+.5,nh-1.5,paste(sgrps[i], "-", sgrps[i+1]), cex = 2)
}
}
lines(rep(length(sgrps),2), c(1,nh-2))
lines(c(1,nns + 1), rep(nh-2,2))
for (igrp in 1:nns) {
for (ip in 1:(nh-2)) {
lid = stable[ip,igrp]
if (is.na(lid)) next
llev = levels(ll$Program)[lid]
sgr = ll$Scopus.Group[which(ll$Program == llev)]
text(igrp+.5, nh-2-ip, cex = 2,
paste(llev,
ifelse(igrp == nns,paste(" (",sgr , ")", collapse = ""), ""),
sep = ""))
}
}
dev.off()
# Number of launches per year
png("LaunchesPerYear.png", width = 1000, height = 1000)
par(mfrow = c(1,1))
par(mar = c(5, 6, 3, 2) + 0.1)
par(mex = 1.5)
for (isats in 1:1) {
if (isats == 1) sats = satsAll else sats = satsFull[satsFull$Scopus.Group >=4,]
years = year(sats$From)
dek = (years%/%10)*10+5
plot(table(years), ylab = "Satellites launched per year", xlab = "Year ",
#       main = ifelse(isats == 1,"All satellites", "Satellites > 4 hits" ),
lwd = 3, cex.axis = 2, cex.lab = 2, xaxt = "n")
at = seq(1972, 2016, 4)
axis(side=1, at = at, cex.axis = 2)#, labels=FALSE)
#  mtext(side=1, text= at, at = at, line = 1, las=0)
lyears = aggregate(rep(1,length(years)), by = list(dek), FUN = sum)
lyears$x[1] = lyears$x[1]/8
lyears$x[2:4] = lyears$x[2:4]/10
lyears$x[5] = lyears$x[5]/3.5
lyears$dek = lyears$Group.1
for (idek in 1:5) {
lines(lyears$dek[idek]+c(-5,5),rep(lyears$x[idek],2),
lty = 2, lwd = 2)
}
if (isats ==1) launchPerYear = lyears
}
dev.off()
# Barchart
sats = satsFull
sats$Year = year(sats$From)
cols = bpy.colors(9)
nd = dim(sats)[1]
grps = c(0,1.00000001,4.999999, 9.999999, 19.99999, 39.999999, 99.99999, 399.99999, 999.99999, 2000)
grps = c(0,4.99999, 9.999999, 49.999999, 249.9999, 2000)
ng = length(grps)-1
yrs = 1971:lastyear
myears = matrix(0, ncol = length(grps)-1, nrow = length(yrs))
pyears = myears
syears = myears
p1 = findInterval(sats$P1, grps)
p2 = findInterval(sats$P2, grps)
m1 = findInterval(sats$M1, grps)
m2 = findInterval(sats$M2, grps)
m3 = findInterval(sats$M3, grps)
s1 = findInterval(sats$S1, grps)
for (isat in 1:nd) {
sat = sats[isat,]
#  iyrs = seq(year(sat$From), year(sat$To), 1)
iyrs = year(sat$From)
if (!is.na(p1[isat])) pyears[iyrs-1970,p1[isat]] = pyears[iyrs-1970,p1[isat]] + 1
if (!is.na(p2[isat])) pyears[iyrs-1970,p2[isat]] = pyears[iyrs-1970,p2[isat]] + 1
if (!is.na(m1[isat])) myears[iyrs-1970,m1[isat]] = myears[iyrs-1970,m1[isat]] + 1
if (!is.na(m2[isat])) myears[iyrs-1970,m2[isat]] = myears[iyrs-1970,m2[isat]] + 1
if (!is.na(m3[isat])) myears[iyrs-1970,m3[isat]] = myears[iyrs-1970,m3[isat]] + 1
if (!is.na(s1[isat])) syears[iyrs-1970,s1[isat]] = syears[iyrs-1970,s1[isat]] + 1
}
myears = as.data.frame(myears)
pyears = as.data.frame(pyears)
syears = as.data.frame(syears)
dimnames(myears)[[1]] = yrs
dimnames(pyears)[[1]] = yrs
dimnames(syears)[[1]] = yrs
cols = heat.colors(dim(myears)[2])
ttext = paste(grps[1], "< Resolution <=", round(grps[2], 2))
for (igrp in 2:(length(grps)-1)) {
if (igrp == 2) {
ttext = c(ttext, paste(round(grps[igrp],2), " < Resolution <", round(grps[igrp+1], 2)))
} else {
ttext = c(ttext, paste(round(grps[igrp],2), " <= Resolution <", round(grps[igrp+1], 2)))
}
}
for (isens in c("Pan", "MSS", "SAR" )) {
if (isens == "Pan") {
lyears = pyears
mpp = "Panchromatic"
} else if (isens == "MSS") {
lyears = myears
mpp = "Multispectral"
} else if (isens == "SAR") {
lyears = syears
mpp = isens
}
lyears = lyears[2:dim(lyears)[1],]
png(paste("SensorLaunches",isens,".png", sep = ""), width = 1000, height = 1000)
par(xpd=T, mar= c(5, 6, 3, 2) + 0.1)
barplot(t(lyears[,ng:1]), col = cols[ng:1], ylab = "Number of sensors",
xlab = "Year", las = 1, cex.axis = 2, cex.names = 2, cex.lab = 2) #, main = mpp)
axis(side=1, at= seq(1972,2013,4), cex.axis = 2)#, labels=FALSE)
xm = max(rowSums(lyears))
legend(2, xm, ttext, fill=cols, cex = 2)
dev.off()
}
# Special 2
png("missionsPerCountryH.png", height = 1800, width = 3000)
require(plyr)
sats = satsAll
#sats$Country = revalue(sats$Country, c("Korea" = "Korea, Republic of",
#                        "USA" = "United States",
#                        "Vietnam" = "Viet Nam",
#                        "North Korea" = "Korea, Democratic People's Republic of",
#                        "UK" = "United Kingdom"))
sats$id = 1:dim(sats)[1]
sats$pl = NA
library(maptools)
data(wrld_simpl)
countries = wrld_simpl
countries$nsen = NA
require(rgdal)
countries = spTransform(countries, CRS("+proj=robin +lon_0=0 +x_0=0 +y_0=0"))
slev = levels(sats$ISO3)
pl = rep(NA, length(sats$ISO3))
nsen = pl
tsen = pl
esacont = c("AUT", "SWE", "CHE", "DEU", "DNK", "ITA", "GBR", "BEL", "NLD", "ESP",
"FRA", "IRL", "NOR", "FIN", "PRT", "GRC", "LUX", "CZE", "ROU", "POL")
esacont = c()
eumetsatcont = c("TUR", "HRV", "EST", "LVA", "HUN", "SVK", "SVN")
rcont = c("RUS", "UKR", "BLR")
rcont = c("RUS")
eusat = sum(sats$ISO3 == "EUR")
rsat = 0
msat = length(grep("MetOp", sats$Name))
for (ic in 1:length(countries$ISO3)) {
coun = countries$ISO3[ic]
levs = slev[grep(as.character(coun), slev)]
lsats = sats[sats$ISO3 %in% levs,]
nsen[ic] = dim(lsats)[1]
if (coun %in% esacont) {
eusat = eusat + nsen[ic]
nsen[ic] = nsen[ic] + sum(sats$ISO3 == "EUR")
}
if (coun %in% c(rcont)) {
rsat = rsat + nsen[ic]
}
if (coun %in% eumetsatcont) {
msat = msat + nsen[ic]
nsen[ic] = nsen[ic] + length(grep("MetOp", sats$Name))
}
pl[lsats$id] = 1
}
countries$nsen = nsen
plsen = nsen
plsen[countries$ISO3 %in% esacont] = 0
plsen[countries$ISO3 == "DEU"] = eusat
plsen[countries$ISO3 %in% eumetsatcont] = 0
plsen[countries$ISO3 %in% "TUR"] = msat
plsen[countries$ISO3 %in% rcont] = 0
plsen[countries$ISO3 == "RUS"] = rsat
plsen[plsen < 15] = 0
countries$plsen = plsen
sats$pl = pl
sats$ISO3[is.na(sats$pl)]
att = c(0,1,5.1,10.1,15.1, 20.1,30.1, 65)
att = c(0,1,5.1,10.1,20.1, 40.1,60.1, 70)
#spplot(countries, "nsen", col.regions = heat.colors(length(att))[length(att):1], at = att, main = "Missions per country", cex = 2, cex.lab = 2, cex.axis = 2)
pids = which(countries$plsen > 1)
pcols = gray(round(1-plsen[pids]/max(plsen)))
pcols = ifelse(plsen[pids] < 6, "#999999", "#000000")
ccols = bpy.colors(length(att)-1)
ccols[length(ccols)-1] = "#FFFFFF"
countries$csen = findInterval(countries$nsen,att)
spplot(countries, "nsen", col.regions = ccols, at = att, # main = "Missions per country",
cex = 2, cex.lab = 2, cex.axis = 2,par.settings=list(fontsize=list(text=80)),
#   colorkey = list(labels=list(
#      at = 1:length(ccols),
#     labels = round(att,0))),
panel = function(x,y, ...){
panel.polygonsplot(x,y, ...)
sp.text(coordinates(countries)[pids,], countries$plsen[pids],
col = pcols, pch = 1, cex = 1, font =2)
})
dev.off()
# Satellite country text
# Textplot
sats = satsAll
s1 = sats$S1
conts = sats$Country
levels(conts) = c(levels(conts), "Argentina", "Brazil")
conts[grep("France", conts)] = "France"
conts[grep("ESA", conts)] = "ESA"
conts[grep("EU", conts)] = "ESA"
conts[grep("Argentina", conts)] = "Argentina"
conts[grep("Brazil", conts)] = "Brazil"
conts = factor(conts)
lconts = levels(conts)
yrs = 1971:lastyear
conts = sats$ISO3
levels(conts) = c(levels(conts), "BRA", "Arg")
conts[grep("BRA", conts)] = "BRA"
conts[grep("EUR", conts)] = "EUR"
conts = factor(conts)
lconts = levels(conts)
png("countryYears.png", width = 2000, height = 1200)
par(xpd=T, mar= c(5, 6, 3, 2) + 0.1, mex = 1.5)
aconts = factor(NULL, levels = lconts)
cmat = matrix(ncol = length((lconts)), nrow = length(yrs))
plot.new()
plot.window(xlim = c(1,length(lconts)+1), ylim = c(1970, 2020))
axis(2, cex.axis = 2)
axis(1, cex.axis = 2)
title(xlab = "Countries", ylab = "Year", cex.lab = 2)
for (isat in 1:dim(sats)[1]){
yr = year(sats$From[isat])
cont = conts[isat]
if (is.na(cont)) next
i1 = grep(cont, aconts)
#if (sum(is.na(i1)) > 1) i1 = numeric(0)
if (length(i1) == 0) {
i1 = length(aconts) + 1
aconts[i1] = cont
}
#  if (is.na(cmat[yr-1970,i1]))
text(i1, yr, lconts[cont], cex = 1.7, font = ifelse(is.na(s1[isat]),1,2))
cmat[yr-1970,i1] = lconts[cont]
}
for (iyr in 1:4) {
lines(c(0,length(lconts)+1),rep(1970+iyr*10-0.5, 2),lty = 2)
}
dev.off()
# Primary sat:
sats = satsAll
conts = sats$Country
levels(conts) = c(levels(conts), "Brazil", "Argentina")
conts[grep("France", conts)] = "France"
conts[grep("ESA", conts)] = "ESA"
conts[grep("EU", conts)] = "ESA"
conts[grep("Argentina", conts)] = "Argentina"
conts[grep("Brazil", conts)] = "Brazil"
conts = factor(conts)
lconts = levels(conts)
ids = which(!duplicated(conts))
lsat = sats[ids,]
syr = year(sats$From)
ssyr =  (syr %/% 5) * 5 + 2
p1 = aggregate(sats$P1, by = list(ssyr), FUN = function(x) min(x, na.rm = TRUE))
m1 = aggregate(sats$M1, by = list(ssyr), FUN = function(x) min(x, na.rm = TRUE))
s1 = aggregate(sats$S1, by = list(ssyr), FUN = function(x) min(x, na.rm = TRUE))
